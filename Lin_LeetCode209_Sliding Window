// class Solution {
//     public int minSubArrayLen(int target, int[] nums) {
//         int left = 0;
//         int right = 0;
//         long sum = 0;
//         int length = nums.length;
//         while(right < nums.length || (right == nums.length && sum >= target)){
//             if(sum < target){
//                 sum += nums[right++];
//             } else {
//                 sum -= nums[left++];
//             }
//             if(sum >= target && length > right - left){
//                 length = right - left;
//             }
//         }
//         if(left == 0 && sum < target){
//             return 0;
//         }
//         return length;
//     }
// } 本道题需要用到滑动窗口 达到最优解

class Solution {
    public int minSubArrayLen(int target, int[] nums) {
        int left = 0;
        long sum = 0;
        int length = nums.length + 1;
        for(int i = 0; i < nums.length; i++){
            sum += nums[i];
            while(sum >= target){
                length = Math.min(length, i - left + 1);
                sum -= nums[left++];
            }
        }
        return (length == nums.length + 1) ? 0 : length;
    }
} 
