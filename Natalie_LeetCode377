class Solution {
    public int combinationSum4(int[] nums, int target) {
        // Arrays.sort(nums);
        // if(target<nums[0]){
        //     return 0;
        // }
        // Set hs = new HashSet();
        // for(int n:nums){
        //     hs.add(n);
        // }
        // int[] dp = new int[target+1];
        // dp[0] = 0;
        // int now = 0;
        // for(int i = 1; i<target+1; i++){
        //     for(int j = 0; j<i; j++){
        //         now = 0;
        //         if(hs.contains(i-j)){
        //             now = dp[j]+1;
        //             dp[i] = Math.max(now,dp[i]);
        //         }
        //     }
        // }
        // return dp[target];
        int[] memo = new int[target + 1];
        memo[0] = 1;
        for (int i = 0; i < target; i++) {
            for (int num : nums) {
                if (i + num <= target) {
                    memo[i + num] += memo[i];
                }
            }
        }
        return memo[target];
    }
}
